apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
    version: v1
    component: microservice
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
        version: v1
    spec:
      containers:
      - name: ${SERVICE_NAME}
        image: ${REGISTRY}/${SERVICE_NAME}:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: ${SERVICE_PORT}
          name: http
          protocol: TCP
        envFrom:
          - configMapRef:
              name: micro-config
        env:
          - name: SERVICE_NAME
            value: ${SERVICE_NAME}
          - name: SERVER_PORT
            value: "${SERVICE_PORT}"
        resources:
          requests:
            memory: "${MEMORY_REQUEST}"
            cpu: "${CPU_REQUEST}"
          limits:
            memory: "${MEMORY_LIMIT}"
            cpu: "${CPU_LIMIT}"
        readinessProbe:
          httpGet:
            path: ${HEALTH_PATH}
            port: ${SERVICE_PORT}
          initialDelaySeconds: 120
          periodSeconds: 15
          timeoutSeconds: 3
          failureThreshold: 6
        livenessProbe:
          httpGet:
            path: ${HEALTH_PATH}
            port: ${SERVICE_PORT}
          initialDelaySeconds: 150
          periodSeconds: 30
          timeoutSeconds: 3
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
    component: microservice
spec:
  selector:
    app: ${SERVICE_NAME}
  ports:
  - port: ${SERVICE_PORT}
    targetPort: ${SERVICE_PORT}
    protocol: TCP
    name: http
    ${NODE_PORT:+nodePort: ${NODE_PORT}}
  type: ${SERVICE_TYPE}